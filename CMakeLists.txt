cmake_minimum_required(VERSION 3.8)
project(rdesktop_wrap)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 98)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    set(CMAKE_PREFIX_PATH /home/user/Qt5.14.2/5.14.2/gcc_64) #这里需要填入自己安装的路径
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    set(CMAKE_PREFIX_PATH C:/Qt/Qt5.12.0/5.12.0/msvc2017_64) #这里需要填入自己安装的路径
ELSE ()
    ERROR(STATUS "other platform: ${CMAKE_SYSTEM_NAME} Not supported")
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)
find_package(Qt5Widgets)
find_package(Qt5Network)
find_package(Qt5Core)
find_package(Qt5Gui)
FILE(GLOB SRC_FILES "./*.cpp")
FILE(GLOB HEAD_FILES "./*.h")
add_executable(rdesktop_wrap ${SRC_FILES} ${HEAD_FILES})
IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    target_link_libraries(rdesktop_wrap Qt5::Widgets Qt5::Network ssl crypto)
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    target_link_libraries(rdesktop_wrap Qt5::Widgets Qt5::Network)
ELSE ()
    ERROR(STATUS "other platform: ${CMAKE_SYSTEM_NAME} Not supported")
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")
qt5_use_modules(rdesktop_wrap Core Widgets Network Gui)
